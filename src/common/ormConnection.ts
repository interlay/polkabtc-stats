import { Connection, createConnection } from "typeorm";

import {
    ParachainEvents,
    VParachainData,
    VParachainDataCancelIssue,
    VParachainDataRequestIssue,
    VParachainCanceledIssues,
    VParachainCollateralLock,
    VParachainCollateralRelease,
    VParachainCollateralSlash,
    VParachainDataExecuteIssue,
    VParachainExecutedIssues,
    VParachainVaultCollateral,
    VParachainVaultIssueRedeem,
    VParachainVaultRegistration,
    VParachainRedeemCancel,
    VParachainRedeemExecute,
    VParachainRedeemRequest,
    VParachainStakedrelayerRegister,
    VParachainStakedrelayerDeregister,
    VParachainStatusSuggest,
    VParachainStatusVote,
    VParachainStatusReject,
    VParachainStatusForce,
    VParachainStatusExecute,
    VParachainStakedrelayerSlash,
    VParachainStakedrelayerStore,
    VParachainRefundRequest,
    VParachainRefundExecute,
    RequestTxCache,
    VParachainVaultSlaUpdate,
    VParachainStakedrelayerSlaUpdate,
} from "../models/";

let conn: Connection | Promise<Connection> | undefined;

export const getTypeORMConnection: () => Promise<Connection> = async () => {
    if (conn === undefined) {
        conn = createConnection({
            type: "postgres",
            host: process.env.PGHOST,
            port: parseInt(process.env.PGPORT || "5432"),
            username: process.env.PGUSER,
            password: process.env.PGPASSWORD,
            database: process.env.PGDATABASE,
            synchronize: true,
            logging: false,
            entities: [
                ParachainEvents,
                VParachainData,
                VParachainDataCancelIssue,
                VParachainDataRequestIssue,
                VParachainCanceledIssues,
                VParachainCollateralLock,
                VParachainCollateralRelease,
                VParachainCollateralSlash,
                VParachainDataExecuteIssue,
                VParachainExecutedIssues,
                VParachainVaultIssueRedeem,
                VParachainVaultSlaUpdate,
                VParachainVaultCollateral,
                VParachainVaultRegistration,
                VParachainStakedrelayerDeregister,
                VParachainStakedrelayerRegister,
                VParachainStakedrelayerSlash,
                VParachainStakedrelayerSlaUpdate,
                VParachainStakedrelayerStore,
                VParachainRedeemRequest,
                VParachainRedeemExecute,
                VParachainRedeemCancel,
                VParachainStatusSuggest,
                VParachainStatusVote,
                VParachainStatusExecute,
                VParachainStatusReject,
                VParachainStatusForce,
                VParachainRefundRequest,
                VParachainRefundExecute,
                RequestTxCache,
            ],
        });
    }
    return conn;
};
